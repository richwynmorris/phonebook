{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","services","getAll","axios","get","then","response","data","createContact","contactObj","post","deleteContact","id","delete","updateContact","changedContact","put","Notification","borderColor","message","successMessage","errorMessage","successStyle","color","fontStyle","background","fontSize","borderStyle","borderRadius","padding","marginBottom","style","Filter","value","onChange","PersonForm","name","number","formSub","nameChange","numberChange","onSubmit","type","Persons","contacts","map","contact","onClick","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newQuery","setNewQuery","filteredContacts","setFilteredContacts","setSuccessMessage","setErrorMessage","useEffect","personService","requestedData","event","target","result","filter","person","slice","length","toLowerCase","preventDefault","some","window","confirm","find","responseData","console","log","reset","concat","setTimeout","catch","error","nameInput","numberInput","parentEl","parentElement","getAttribute","ReactDOM","render","document","getElementById"],"mappings":"gLACMA,EAAU,eAwBDC,EAFE,CAACC,OApBH,WAEb,OADgBC,IAAMC,IAAN,UAAaJ,IACdK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAkBjBC,cAfJ,SAACC,GAErB,OADgBN,IAAMO,KAAN,UAAcV,GAAWS,GAC1BJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAaFI,cAVnB,SAACC,GAErB,OADgBT,IAAMU,OAAN,UAAgBb,EAAhB,YAA2BY,IAC5BP,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQaO,cALlC,SAACF,EAAIG,GAEzB,OADgBZ,IAAMa,IAAN,UAAahB,EAAb,YAAwBY,GAAMG,GAC/BV,MAAK,SAAAC,GAAQ,OAAIA,EAASC,U,OCjBrCU,EAAe,SAAC,GAAoC,IACpDC,EACAC,EAFiBC,EAAkC,EAAlCA,eAAgBC,EAAkB,EAAlBA,aAIrC,GAAuB,OAAnBD,GAA4C,OAAjBC,EAC7B,OAAO,KACED,GACTF,EAAc,QACdC,EAAUC,IAEVF,EAAc,MACdC,EAAUE,GAGZ,IAAMC,EAAe,CACnBC,MAAM,GAAD,OAAKL,GACVM,UAAW,OACXC,WAAY,YACZC,SAAU,KACVC,YAAa,QACbC,aAAc,IACdC,QAAS,KACTC,aAAc,MAGhB,OACE,qBAAKC,MAAOT,EAAZ,SACGH,KAKDa,EAAS,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SACtB,OACE,gCACE,kDACA,uBAAOD,MAAOA,EAAOC,SAAUA,QAK/BC,EAAa,SAAC,GAAuD,IAAtDC,EAAqD,EAArDA,KAAMC,EAA+C,EAA/CA,OAAQC,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,aACtD,OACI,uBAAMC,SAAUH,EAAhB,UACE,yCACQ,uBAAOL,MAAOG,EAAMF,SAAUK,OAEtC,2CACU,uBAAON,MAAOI,EAAQH,SAAUM,OAE1C,8BACE,wBAAQE,KAAK,SAAb,uBAMJC,EAAU,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,SAAUjC,EAAmB,EAAnBA,cAC1B,OACEiC,EAASC,KAAI,SAAAC,GACX,OACE,sBAAwB,YAAWA,EAAQV,KAAMxB,GAAIkC,EAAQlC,GAA7D,UACE,8BAAIkC,EAAQV,KAAZ,KAAoBU,EAAQT,UAC5B,wBAAQU,QAASpC,EAAjB,sBAFQmC,EAAQV,UAqIXY,EA5HH,WAEV,MAA4BC,mBAAS,IAArC,mBAAKC,EAAL,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAMG,EAAN,KAAeC,EAAf,KACA,EAAkCJ,mBAAS,IAA3C,mBAAMK,EAAN,KAAiBC,EAAjB,KACA,EAAgCN,mBAAS,IAAzC,mBAAMO,EAAN,KAAgBC,EAAhB,KACA,EAAgDR,mBAAS,IAAzD,mBAAMS,EAAN,KAAwBC,EAAxB,KACA,EAA2CV,mBAAS,MAApD,mBAAM7B,EAAN,KAAsBwC,EAAtB,KACA,EAAwCX,mBAAS,MAAjD,mBAAM5B,EAAN,KAAoBwC,EAApB,KAUAC,qBARuB,WACrBC,EACC7D,SACAG,MAAK,SAAA2D,GACJb,EAAWa,QAIa,IAE5B,IAAIpB,EAAWc,GAAsCR,EA0FrD,OACE,gCACE,0CAAaE,KACb,2CACA,cAAC,EAAD,CAAchC,eAAgBA,EAAgBC,aAAcA,IAC5D,cAAC,EAAD,CAAQY,MAAOuB,EAAUtB,SAnFF,SAAC+B,GAC1BT,EAAWS,EAAMC,OAAOjC,MACxB,IACIkC,EADI,YAAOjB,GACGkB,QAAO,SAAAC,GAAM,OAAIA,EAAOjC,KAAKkC,MAAM,EAAGd,EAASe,QAAQC,gBAAkBhB,EAASgB,iBACpGb,EAAoBQ,GACpBV,EAAYD,MA+EV,6CACA,cAAC,EAAD,CAAYvB,MAAOmB,EAASd,QA7EH,SAAC2B,GAG5B,IAFAA,EAAMQ,iBAEFvB,EAAQwB,MAAK,SAAAL,GAAM,OAAIA,EAAOjC,KAAKoC,gBAAkBpB,EAAQoB,mBAClDG,OAAOC,QAAP,UAAkBxB,EAAlB,+EAGX,YA+CN,SAAuBa,GACrB,IAAInB,EAAUI,EAAQ2B,MAAK,SAAAR,GAAM,OAAIA,EAAOjC,KAAKoC,gBAAkBpB,EAAQoB,iBACvE5D,EAAKkC,EAAQlC,GACbG,EAAc,2BAAO+B,GAAP,IAAgBT,OAAQiB,IAE1CS,EACGjD,cAAcF,EAAIG,GAClBV,MAAK,SAAAyE,GACJC,QAAQC,IAAIF,GACZzB,EAAWD,EAAU,IACrBG,EAAaD,EAAY,IACzBW,EAAMC,OAAOe,QACb9B,EAAWD,EAAQL,KAAI,SAAAwB,GAAM,OAAIA,EAAOzD,KAAOA,EAAKyD,EAASS,SA5D7DhE,CAAcmD,GAKlB,IAAInB,EAAU,CACZV,KAAMgB,EACNf,OAAQiB,GAGVS,EACGvD,cAAcsC,GACdzC,MAAK,SAAAyE,GACJ3B,EAAWD,EAAQgC,OAAOJ,IAC1BlB,EAAkB,GAAD,OACZR,EADY,gCAGjBC,EAAW,IACXE,EAAa,IACbU,EAAMC,OAAOe,QACbE,YAAW,WACTvB,EAAkB,QACjB,QAEJwB,OAAM,SAAAC,GACLxB,EAAgBwB,EAAM/E,SAASC,KAAK8E,OACpCF,YAAW,WACTtB,EAAgB,QACf,SA2CsDtB,WA/FtC,SAAC0B,GACxB,IAAIqB,EAAYrB,EAAMC,OAAOjC,MAC7BoB,EAAWD,EAAUkC,IA6FsE9C,aA1FlE,SAACyB,GAC1B,IAAIsB,EAActB,EAAMC,OAAOjC,MAC/BsB,EAAaD,EAAYiC,MAyFvB,yCACA,cAAC,EAAD,CAAS3C,SAAUA,EAAUjC,cAzCZ,SAACsD,GACpB,IAAIuB,EAAWvB,EAAMC,OAAOuB,cACxBrD,EAAOoD,EAASE,aAAa,aAC7B9E,EAAK4E,EAASE,aAAa,MAClBf,OAAOC,QAAP,0CAAkDxC,EAAlD,OAGX2B,EACCpD,cAAcC,GACdP,MAAK,SAAAyE,GACJ,IAAIX,EAASjB,EAAQkB,QAAO,SAAAC,GAAM,OAAIA,EAAOzD,KAAOA,KACpDuC,EAAWgB,aC/JnBwB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.986c11fa.chunk.js","sourcesContent":["import axios from \"axios\";\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(`${baseUrl}`)\n  return request.then(response => response.data)\n}\n\nconst createContact = (contactObj) => {\n  const request = axios.post(`${baseUrl}`, contactObj)\n  return request.then(response => response.data)\n}\n\nconst deleteContact = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nconst updateContact = (id, changedContact) => {\n  const request = axios.put(`${baseUrl}/${id}`, changedContact)\n  return request.then(response => response.data)\n}\n\nconst services = {getAll, createContact, deleteContact, updateContact} \n\nexport default services\n","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\n\nconst Notification = ({successMessage, errorMessage}) => {\n  let borderColor;\n  let message;\n  \n  if (successMessage === null && errorMessage === null) {\n    return null\n  } else if (successMessage) {\n    borderColor = 'green'\n    message = successMessage\n  } else {\n    borderColor = 'red'\n    message = errorMessage\n  }\n\n  const successStyle = {\n    color: `${borderColor}`,\n    fontStyle: 'bold',\n    background: 'lightgrey',\n    fontSize: '20',\n    borderStyle: 'solid',\n    borderRadius: '5',\n    padding: '10',\n    marginBottom: '10'\n  }\n\n  return (\n    <div style={successStyle}>\n      {message}\n    </div>\n  )\n}\n\nconst Filter = ({value, onChange}) => {\n  return (\n    <div>\n      <p>filter shown with</p>\n      <input value={value} onChange={onChange} />\n    </div>\n  )\n}\n\nconst PersonForm = ({name, number, formSub, nameChange, numberChange}) => {\n  return (\n      <form onSubmit={formSub}>\n        <div>\n          name: <input value={name} onChange={nameChange}/>\n        </div>\n        <div>\n          number: <input value={number} onChange={numberChange}/>\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n  )\n}\n\nconst Persons = ({contacts, deleteContact}) => {\n  return (\n    contacts.map(contact => {\n      return (\n        <div key={contact.name} data-name={contact.name} id={contact.id}>\n          <p>{contact.name}: {contact.number}</p>\n          <button onClick={deleteContact}>Delete</button>\n        </div>\n      )\n    })\n  )\n}\n\nconst App = () => {\n\n  let [persons, setPersons] = useState([])\n  let [ newName, setNewName ] = useState('')\n  let [ newNumber, setNewNumber ] = useState('')\n  let [ newQuery, setNewQuery ] = useState('')\n  let [ filteredContacts, setFilteredContacts ] = useState('')\n  let [ successMessage, setSuccessMessage] = useState(null)\n  let [ errorMessage, setErrorMessage ] = useState(null)\n\n  let fetchContactData = () => {\n    personService\n    .getAll()\n    .then(requestedData => {\n      setPersons(requestedData)\n    })\n  }\n\n  useEffect(fetchContactData, [])\n\n  let contacts = filteredContacts ? filteredContacts : persons\n\n  const handleNameChange = (event) => {\n    let nameInput = event.target.value\n    setNewName(newName = nameInput)\n  }\n\n  const handleNumberChange = (event) => {\n    let numberInput = event.target.value\n    setNewNumber(newNumber = numberInput)\n  }\n\n  const handleFilterChange = (event) => {\n    newQuery = event.target.value\n    let copy = [...persons]\n    let result = copy.filter(person => person.name.slice(0, newQuery.length).toLowerCase() === newQuery.toLowerCase())\n    setFilteredContacts(result)\n    setNewQuery(newQuery)\n  }\n\n  const handleFormSubmission = (event) => {\n    event.preventDefault()\n\n    if (persons.some(person => person.name.toLowerCase() === newName.toLowerCase())) {\n      let result = window.confirm(`${newName} already exists in the phonebook, replace the old number with the new one?`)\n      if (result) {\n        updateContact(event)\n        return\n      }\n    }\n\n    let contact = {\n      name: newName,\n      number: newNumber\n    }\n\n    personService\n      .createContact(contact)\n      .then(responseData => {\n        setPersons(persons.concat(responseData))\n        setSuccessMessage(\n          `${newName} was added to the phonebook`\n        )\n        setNewName('')\n        setNewNumber('')\n        event.target.reset()\n        setTimeout(() => {\n          setSuccessMessage(null)\n        }, 5000)\n      })\n      .catch(error => {\n        setErrorMessage(error.response.data.error)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n  }\n\n  const handleDelete = (event) => {\n    let parentEl = event.target.parentElement\n    let name = parentEl.getAttribute('data-name')\n    let id = parentEl.getAttribute('id')\n    let result = window.confirm(`Are you sure you want to delete ${name}?`)\n\n    if (result) {\n      personService\n      .deleteContact(id)\n      .then(responseData => {\n        let result = persons.filter(person => person.id !== id)\n        setPersons(result)\n      })\n    }\n  }\n\n  function updateContact(event) {\n    let contact = persons.find(person => person.name.toLowerCase() === newName.toLowerCase())\n    let id = contact.id\n    let changedContact = {...contact, number: newNumber}\n\n    personService\n      .updateContact(id, changedContact)\n      .then(responseData => {\n        console.log(responseData)\n        setNewName(newName = '')\n        setNewNumber(newNumber = '')\n        event.target.reset()\n        setPersons(persons.map(person => person.id !== id ? person : responseData))\n      })\n  }\n\n  return (\n    <div>\n      <div>debug: {newName}</div>\n      <h2>Phonebook</h2>\n      <Notification successMessage={successMessage} errorMessage={errorMessage}/>\n      <Filter value={newQuery} onChange={handleFilterChange}/>\n      <h3>Add Contact</h3>\n      <PersonForm value={newName} formSub={handleFormSubmission} nameChange={handleNameChange} numberChange={handleNumberChange} />\n      <h3>Numbers</h3>\n      <Persons contacts={contacts} deleteContact={handleDelete}/>\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}